{"meta":{"title":"q0o0p","subtitle":null,"description":null,"author":"John Doe","url":"https://github.com/q0o0p-wow/q0o0p-wow.github.io","root":"/"},"pages":[],"posts":[{"title":"steganography","slug":"steganography","date":"2019-11-28T14:04:02.000Z","updated":"2019-12-08T12:41:45.755Z","comments":true,"path":"2019/11/28/steganography/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/11/28/steganography/","excerpt":"","text":"隐写工具介绍及总结: https://www.jianshu.com/p/b61e4ff0b0d5","categories":[],"tags":[]},{"title":"cft-tool","slug":"cft-tool","date":"2019-11-19T08:17:06.000Z","updated":"2019-12-08T12:41:45.630Z","comments":true,"path":"2019/11/19/cft-tool/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/11/19/cft-tool/","excerpt":"","text":"nmaphttps://blog.csdn.net/qq_36119192/article/details/82079150 foremost–&gt;文件分离和还原工具是一个控制台程序，用于文件分离和还原根据页眉，页脚和内部数据结构恢复文件，可以处理图像文件（例如由dd，Safeback，Encase等生成的图像文件）这些内置类型查看给定文件格式的数据结构，从而实现更可靠，更快速的恢复。或直接在驱动器上。页眉和页脚可以由配置文件指定，也可以使用命令行开关指定内置文件类型。 在数字取证中和CTF中常用来恢复、分离文件。它默认支持19种类型文件(jpg, gif, png, bmp, avi, exe, mpg, mp4, wav, riff, wmv, mov, pdf, ole, doc, zip, rar, html, cpp 等文件)的扫描识别恢复，还可以通过(通过配置它的配置文件foremost.conf)增加新的支持类型。 windows下载地址 –&gt; https://github.com/raddyfiy/foremost可以选择自己源码编译为exe，也可以直接用大佬们编译完的（在binary里面）将foremost.conf 和 foermost.exe 单独分离出来放入一个新文件夹中使用时将要分离的文件放入该文件夹下分离完成的后文件–&gt;如果没有指定路径，则放入output里面. Linux下对于压缩包形式： 1234$ tar zxvf foremost-xx.tar.gz$ cd foremost-xx$ make$ make install 直接安装（根据自己的Linux版本） 1234567891011121314151617$ apt-get install foremost //Ubuntu安装foremost$ foremost -h //检查是否安装成功$ foremost [-v|-V|-h|-T|-Q|-q|-a|-w-d] [-t &lt;type&gt;] [-s &lt;blocks&gt;] [-k &lt;size&gt;] [-b &lt;size&gt;] [-c &lt;file&gt;] [-o &lt;dir&gt;] [-i &lt;file] //命令及作用-V - 显示版权信息并退出 -t - 指定文件类型. (-t jpeg,pdf ...) -d -打开间接块检测 (针对UNIX文件系统) -i - 指定输入文件 (默认为标准输入) -a - 写入所有的文件头部, 不执行错误检测(损坏文件) -w - 向磁盘写入审计文件，不写入任何检测到的文件-o - 设置输出目录 (默认为为输出)-c - 设置配置文件 (默认为 foremost.conf)-q - 启用快速模式. 在512字节边界执行搜索.-Q - 启用安静模式. 禁用输出消息. -v - 详细模式. 向屏幕上记录所有消息。 注： 未指定输出目录，结果放在foremost所在目录的output文件夹内，配置文件为所在目录的foremost.conf。 Wireshark官网下载地址 1. burpsuite和Wireshark的原理及区别2. Wiresharkd的详细分析 HxD Hex Editor专门用于文件十六进制显示和编辑的软件免费的，且功能强其功能比Notepad++的插件强https://mh-nexus.de/en/downloads.php?product=HxD20 参考：https://blog.csdn.net/john_david_/article/details/87273152","categories":[],"tags":[]},{"title":"Windows 常用命令","slug":"windows","date":"2019-11-15T02:13:59.000Z","updated":"2019-12-08T12:41:45.755Z","comments":true,"path":"2019/11/15/windows/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/11/15/windows/","excerpt":"","text":"转发： https://mp.weixin.qq.com/s/8vt1HsqV5b1H0xMkUK4CiA 0x01：常用系统指令 dir //查看当前目录和子目录 tree 以图形模式显示驱动器或路径的目录结构 mkdir 创建目录 md 创建文件夹 rd 删除文件夹 move 将文件从一个目录转移到另一个目录 type 显示文本文件内容 copy 复制文件 del 删除文件 quser 查看当前登陆的用户 rename /ren 重命名文件/文件夹 ipconfig /all 获取ip地址 所在域 linux：ifconfig -a Route print 路由信息 Arp -a arp缓存 Netsh firewall show config 查看防火墙规则 Netsh firewall show state Netstat -an 获取端口信息 Whoami 当前用户权限 Hostname 主机名称 Set 环境变量 Query user 查看远程终端在线用户 Systeminfo 获取操作系统版本、类型、位数等相关信息、安装； tasklist \\svc netstat -an | findstr “LISTENING” · -b： 显示包含于常见每个链接或监听端口的可执行组件； · -o： 显示与每个连接相关的所属进程ID； · -v： 与b一起使用时将显示包含于为所有可执行组件创建连接或者监听端口的组件； Netstat -anb 进程号、端口开放情况、开放端口程序、监听端口组件 Netsata -ano tcp/udp协议信息、端口、进程号 Netstat -anvb 进程号、端口所用协议、调用的可执行组件、第三方进程的系统路径等 Tasklist /svc 获取运行的进程名称、服务、PID Driverquery 查看已安装驱动程序列表 Net start 查看已经启动的windows服务 Msinfo32 获取更加详细的信息 Taskkill 是windows自带的终止进程程序 TASKKILL [/S system [/U username [/P [password]]]]{ [/FI filter] [/PID processid | /IM imagename] } [/T] [/F] 例如：taskkill /pid 452 /f taskkill /im 360tray /f 用户管理命令： Net user hack 123 /add 添加hack用户 密码为123 whoami 查询账号所属权限 whoami /all 查看sid值密码策略 net account 查看本地密码策略 net account /domain 查看域 netstat -an 网络连接查询 route print 路由打印 net user 查询本机用户列表 net session 查看当前会话 Net start 获取服务信息利用第三方漏洞提权、关闭杀毒软件、防火墙、以及关闭某些防护进程 Net stop servicesname 停止服务命 Net start servicename 开启服务命令 net share 查看SMB指向的 net view 查询同一域内机器列表 net view /domain 查询域列表 nltest /dclist:bk 查询域控主机名 nltest /dclist:域名 nltest /domain_trusts 列出域之间的信任关系 net view /domain:Secwing 查看Secwing域中的列表 net time /domain 判断主域，主域都做时间列表 net config workstation 当前登录域 net group “enterprise admins” /domain 企业管理组 net user /domain admin@126.com test 修改域用户密码(需要域管理员密码) net user /domain 查询域用户 net group /domain 查询域里面的工作组 net group “domain admins” /domain 查询域管理员用户组 net localgroup administrators /domain //登录本机的域管理员 net group “domain controllers” /domain 查看域控制器 mstsc /admin 远程桌面登录到console会话解决hash无法抓取问题 dsquery computer domainroot -limit 65535 &amp;&amp; net group “domain computers” /domain 列出该域内所有机器名 dsquery user domainroot -limit 65535 &amp;&amp; net user /domain 列出该域内所有用户名 dsqery subnet 列出该域内网段划分 dsqery group &amp;&amp; net group /domain //列出该域内分组 dsquery ou 列出该域内组织单位 dsquery server &amp;&amp; net time /domain 列出该域内域控制器 net localgroup administrators //查看本机管理员 Net localgroup adminnistrators hack /add 添加hack为管理员权限 Net localgroup adminnistrators 查看当前系统管理员 Net localgroup “remote desktop users” hack /add 加入远程桌面用户组 Net user hack 查看指定用户的信息 Net user guest /active:yes 激活guest用户 Net user guest 123 0x02：远程桌面开启指令 windows系统开启查询远程桌面（mstsc/rdesktop） （1）XP/Win2k3/Win7/Win2k8/Win8.1/Win10/2012/2016（0：ON、1：OFF）： REG ADD &quot;HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 0 /f （2）Win2k3/Win7/Win2k8/Win8.1/Win10/2012/2016：（0：ON、1：OFF）： wmic RDTOGGLE WHERE ServerName=&apos;%COMPUTERNAME%&apos; call SetAllowTSConnections 1 （3）Winserver2008/2012/Win2k3/win7： wmic /namespace:\\\\root\\cimv2\\terminalservices path win32_terminalservicesetting where (__CLASS !=&quot;&quot;) call setallowtsconnections 1 （4）Winserver2008/2012/： wmic /namespace:\\\\root\\cimv2\\terminalservices path win32_tsgeneralsetting where (TerminalName =&apos;RDP-Tcp&apos;) call setuserauthenticationrequired 1 （5）XP/Win2k3/Win7/Win2k8/Win8.1/Win10/2012/2016（Metasploit）： meterpreter&gt; run getgui -e以下脚本或模块可以开启3389远程桌面端口、创建管理员账户密码、禁用远程桌面(TCP-In)防火墙入站规则。 /usr/share/metasploit-framework/scripts/meterpreter/getgui.rb /usr/share/metasploit-framework/modules/post/windows/manage/enable_rdp.rb0x03：常用端口及服务数据库类端口： MSSQL： 1433 Oracle： 1521 MYSQL： 3306 PostgreSQL: 5432 特殊服务类： SSL(心脏滴血)：443 MS08067、MS110568、MS17010：445 Rsync(未授权)：873 CouchDB： 5984 redis(未授权)：6379 WebLogic(弱口令、反序列化)：7001/7002 memcache（未授权）：11211 Mongodb(未授权)：27017/27018 SAP(命令执行)：50000 hadoop(未授权)：50070、50030 远程连接端口： ftp： 21 ssh： 22 telnet: 23 SMB(弱口令):445 路由(zebra)：2601/2604 远程桌面：3389 (0708)","categories":[],"tags":[]},{"title":"burpsuite的使用","slug":"burpsuite","date":"2019-11-12T12:32:48.000Z","updated":"2019-12-08T12:41:45.630Z","comments":true,"path":"2019/11/12/burpsuite/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/11/12/burpsuite/","excerpt":"","text":"1.配置Firefox 扩展：http请求方式：HTTP1.0定义了三种方法：GET ,OPST, HEADHTTP1.1新增加了五种： OPTIONS ,PUT, DELETE.TRACE,CONNECT GET 请求指定的页面信息，并返回实体主体。HEAD 类似于get请求，只不过返回的响应中没有具体的内容，用于获取报头POST 向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。PUT 从客户端向服务器传送的数据取代指定的文档的内容。DELETE 请求服务器删除指定的页面。CONNECT HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。OPTIONS 允许客户端查看服务器的性能。TRACE 回显服务器收到的请求，主要用于测试或诊断。","categories":[],"tags":[]},{"title":"git的使用","slug":"git","date":"2019-11-12T12:32:48.000Z","updated":"2019-12-08T13:03:57.615Z","comments":true,"path":"2019/11/12/git/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/11/12/git/","excerpt":"","text":"##1.绑定用户打开git-bash.exe（直接在桌面上点击右键，或者点击开始按钮找到Git Bash）运行gitBash.gif 在打开的GIt Bash中输入以下命令（用户和邮箱为你github注册的账号和邮箱） 12$ git config --global user.name &quot;q0o0p-wow&quot;$ git config --global user.email &quot;2825966877@qq.com&quot; ##2.设置SSH key先检查是否已生成密钥cd ~/.ssh，如果返回的ls有3个文件,则密钥已经生成。如果没有密钥，执行如下命令： 1$ ssh-keygen -t rsa -C &quot;2825966877@qq.com&quot; 生成过程中一路按3次回车键就好了。第二次回车为设置密码（默认路径，默认没有密码登录）生成成功后，去对应目录C:\\Users\\ASUS\\ssh里面找公钥 id_rsa 是私钥 id_rsa.pub是公钥只需复制公钥即可。接下来为github账号配置ssh key切换到github，在右上角找到settings，然后打开SSH keys菜单， 点击Add SSH key新增密钥，填上标题（最好跟本地仓库保持一致）。 设置sshkey.gif接着将id_rsa.pub文件中key粘贴到此，最后Add key生成密钥。 ##3.建立本地仓库cd 切换路径，打开blog（你的文件夹名）文件夹，执行命令： 123git initgit add //将所有文件添加到仓库git commit -m &quot;提交文件&quot; //双引号内是提交注释 初始化成功后你会发现项目里多了一个隐藏文件夹.git 1ls -ah //可用此命令查看 4.关联github仓库1git remote add origin https://github.com/q0o0p-wow/blog.git 合并分支假如我们现在在dev分支上，刚开发完项目，执行了下列命令：git add .git commit -m ‘提交的备注信息’git push -u origin dev想将dev分支合并到master分支，操作如下： 123$ git checkout master //切换到master分支上$ git pull origin master //远程仓库里的项目拉下来$ git merge dev （如果是多人开发的话 需要把远程master上的代码pull下来） 删除文件： 123git rm -r --cached 目标文件夹 git commit -m &apos;删除说明&apos;git push -u origin master //重新提交 git分支的管理1234567891011$ git branch //如果不加任何参数运行它，会得到当前所有分支的一个列表$ git branch -r //查看远程分支$ git checkout -b master origin/master //把远程分支master 拉取到本地$ git checkout 分支名称 //切换分支$ history //查看历史$ git status //查看要提交的条件$ git add . //全部提交$ git commit -m &apos;注释&apos;//提交注释$ git push origin 本地分支名 ： 远程分支名 //上传本地当前分支代码到远程分支$ git branch -m 原名 新 //改名 #git 仓库管理 12345678910git remote -v //远程仓库路径查询git remote add origin &lt;你的项目地址&gt; //添加远程仓库，注:项目地址形式为https://gitee.com/xxx/xxx.git或者 git@gitee.com:xxx/xxx.gitgit remote rm origin //删除指定的远程git push origin -d dev //删除远程分支git branch -d -r origin/dev //只删除本地分支git branch -d 名称 参考：https://blog.csdn.net/weixin_41883384/article/details/80805580","categories":[],"tags":[]},{"title":"IntelliJ IDEA 快捷键","slug":"IntelliJ IDEA","date":"2019-11-09T12:55:32.000Z","updated":"2019-12-08T12:41:45.615Z","comments":true,"path":"2019/11/09/IntelliJ IDEA/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/11/09/IntelliJ%20IDEA/","excerpt":"","text":"IDea：Alt+回车 导入包,自动修正Ctrl+N 查找类Ctrl+Shift+N 查找文件Ctrl+Alt+L 格式化代码Ctrl+Alt+O 优化导入的类和包Alt+Insert 生成代码(如get,set方法,构造函数等)Ctrl+E或者Alt+Shift+C 最近更改的代码Ctrl+R 替换文本Ctrl+F 查找文本Ctrl+Shift+Space 自动补全代码Ctrl+空格 代码提示Ctrl+Alt+Space 类名或接口名提示Ctrl+P 方法参数提示Ctrl+Shift+Alt+N 查找类中的方法或变量Alt+Shift+C 对比最近修改的代码 Shift+F6 重构-重命名Ctrl+Shift+先上键Ctrl+X 删除行Ctrl+D 复制行Ctrl+/ 或 Ctrl+Shift+/ 注释（// 或者/…/ ）Ctrl+J 自动代码Ctrl+E 最近打开的文件Ctrl+H 显示类结构图Ctrl+Q 显示注释文档Alt+F1 查找代码所在位置Alt+1 快速打开或隐藏工程面板Ctrl+Alt+ left/right 返回至上次浏览的位置Alt+ left/right 切换代码视图Alt+ Up/Down 在方法间快速移动定位Ctrl+Shift+Up/Down 代码向上/下移动。F2 或Shift+F2 高亮错误或警告快速定位 代码标签输入完成后，按Tab，生成代码。选中文本，按Ctrl+Shift+F7 ，高亮显示所有该文本，按Esc高亮消失。Ctrl+W 选中代码，连续按会有其他效果选中文本，按Alt+F3 ，逐个往下查找相同文本，并高亮显示。Ctrl+Up/Down 光标跳转到第一行或最后一行下Ctrl+B 快速打开光标处的类或方法 最常用快捷键1.Ctrl＋E，可以显示最近编辑的文件列表2.Shift＋Click可以关闭文件3.Ctrl＋[或]可以跳到大括号的开头结尾4.Ctrl＋Shift＋Backspace可以跳转到上次编辑的地方5.Ctrl＋F12，可以显示当前文件的结构6.Ctrl＋F7可以查询当前元素在当前文件中的引用，然后按F3可以选择7.Ctrl＋N，可以快速打开类8.Ctrl＋Shift＋N，可以快速打开文件9.Alt＋Q可以看到当前方法的声明10.Ctrl＋W可以选择单词继而语句继而行继而函数11.Alt＋F1可以将正在编辑的元素在各个面板中定位12.Ctrl＋P，可以显示参数信息13.Ctrl＋Shift＋Insert可以选择剪贴板内容并插入14.Alt＋Insert可以生成构造器/Getter/Setter等15.Ctrl＋Alt＋V 可以引入变量。例如把括号内的SQL赋成一个变量16.Ctrl＋Alt＋T可以把代码包在一块内，例如try/catch17.Alt＋Up and Alt＋Down可在方法间快速移动 下面的不是很有用18.在一些地方按Alt＋Enter可以得到一些Intention Action，例如将”==”改为”equals()”19.Ctrl＋Shift＋Alt＋N可以快速打开符号20.Ctrl＋Shift＋Space在很多时候都能够给出Smart提示21.Alt＋F3可以快速寻找22.Ctrl＋/和Ctrl＋Shift＋/可以注释代码23.Ctrl＋Alt＋B可以跳转到抽象方法的实现24.Ctrl＋O可以选择父类的方法进行重写25.Ctrl＋Q可以看JavaDoc26.Ctrl＋Alt＋Space是类名自动完成27.快速打开类/文件/符号时，可以使用通配符，也可以使用缩写28.Live Templates! Ctrl＋J29.Ctrl＋Shift＋F7可以高亮当前元素在当前文件中的使用30.Ctrl＋Alt＋Up /Ctrl＋Alt＋Down可以快速跳转搜索结果 特别的array.fori 123for(int i=0;i&lt;array.length;i++)&#123;&#125; alt+inster 方法重载：alt+enter！！","categories":[],"tags":[]},{"title":"Ubuntu","slug":"ubuntu","date":"2019-11-06T12:40:02.505Z","updated":"2019-11-12T10:55:12.217Z","comments":true,"path":"2019/11/06/ubuntu/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/11/06/ubuntu/","excerpt":"","text":"1234apt-get update //更新软件库 apt-get upgrade //升级软件apt-get install ubuntu-desktop //安装Ubuntu桌面系统 sudo vi /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf //打开50-ubuntu.conf 在末尾添加 greeter-show-manual-login=true //允许切换用户登陆 allow-guest=false //禁用Guest 完整代码 [Seat:*] user-session=ubuntu greeter-show-manual-login=true allow-guest=false保存重启(在VI模式下编辑完成后使用Esc键切换到末行模式,然后输入:wq退出编辑)发现root用户登陆后还是有警告 修改/root/.profile文件 (图形界面下修改请勾选显示隐藏文件) 将mesg n 替换为 tty -s &amp;&amp; mesg n 完整代码 ~/.profile: executed by Bourne-compatible login shells.if [ “$BASH” ]; thenif [ -f ~/.bashrc ]; then. ~/.bashrcfifitty -s &amp;&amp; mesg n || true 保存后重启即可完美在桌面环境登陆root","categories":[],"tags":[]},{"title":"Linux 基础篇(ubuntu19.04)","slug":"linux","date":"2019-11-03T05:59:32.256Z","updated":"2019-11-21T12:38:53.916Z","comments":true,"path":"2019/11/03/linux/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/11/03/linux/","excerpt":"","text":"换yum 12sudo cp /etc/apt/sources.list /etc/apt/sources_init.list //备份原来的源sudo gedit /etc/apt/sources.list //更换源 阿里源： 123456789101112131415deb http://mirrors.aliyun.com/ubuntu/ xenial maindeb-src http://mirrors.aliyun.com/ubuntu/ xenial maindeb http://mirrors.aliyun.com/ubuntu/ xenial-updates maindeb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates maindeb http://mirrors.aliyun.com/ubuntu/ xenial universedeb-src http://mirrors.aliyun.com/ubuntu/ xenial universedeb http://mirrors.aliyun.com/ubuntu/ xenial-updates universedeb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates universedeb http://mirrors.aliyun.com/ubuntu/ xenial-security maindeb-src http://mirrors.aliyun.com/ubuntu/ xenial-security maindeb http://mirrors.aliyun.com/ubuntu/ xenial-security universedeb-src http://mirrors.aliyun.com/ubuntu/ xenial-security universe 网易源： 12345678910deb http://mirrors.163.com/ubuntu/ wily main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiversedeb http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ wily main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ wily-security main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ wily-updates main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ wily-proposed main restricted universe multiversedeb-src http://mirrors.163.com/ubuntu/ wily-backports main restricted universe multiverse 更新：12345sudo apt-get update // &lt;!-- wget install -y update --&gt; 更新源sudo apt-get -f install // 卸载出错的包，重新安装正确版本的sudo apt-get upgrade // &lt;!-- wegt install -y upgrade --&gt; 更新软件 查找文件所在位置 1.whereis 文件名 特点:快速,但是是模糊查找,例如 找 #whereis mysql 它会把mysql,mysql.ini,mysql.*所在的目录都找出来. 2.find / -name 文件名 特点:准确,但速度慢,消耗资源大,例如我想找到php.ini的准确位置,就需要用 #find / -name php.ini 3.locate 文件名 强力推荐的方法,最快,最好的方法.","categories":[],"tags":[]},{"title":"Live2D添加板娘","slug":"live2D-two","date":"2019-11-02T12:52:44.478Z","updated":"2019-11-04T10:58:00.005Z","comments":true,"path":"2019/11/02/live2D-two/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/11/02/live2D-two/","excerpt":"","text":"打开Git Bash 先下载live2d1$ npm install --save hexo-helper-live2d 下载模型1live2d-widget-model-z16 更多模型12345678910111213141516171819202122live2d-widget-model-chitoselive2d-widget-model-epsilon2_1live2d-widget-model-gflive2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)live2d-widget-model-harutolive2d-widget-model-hibikilive2d-widget-model-hijikilive2d-widget-model-izumilive2d-widget-model-koharulive2d-widget-model-mikulive2d-widget-model-ni-jlive2d-widget-model-nicolive2d-widget-model-nietzschelive2d-widget-model-nipsilonlive2d-widget-model-nitolive2d-widget-model-shizukulive2d-widget-model-tororolive2d-widget-model-tsumikilive2d-widget-model-unitychanlive2d-widget-model-wankolive2d-widget-model-z16 在根目录_config.yml配置下添加以下参数12345678910111213141516live2d: enable: true scriptFrom: local #默认 pluginRootPath: live2dw/ #插件在站点上是根目录 pluginJsPath: lib/ #脚本文件相对于插件根目录路径 pluginModelPath: assets/ #模型文件相对于与插件根目录路径 tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中 debug: false # 调试, 是否在控制台输出日志 model: use: live2d-widget-model-z16 #live2d-widget-model-shizuku 要修改的 display: position: right #在屏幕上显示的位置 width: 150 #宽度 height: 300 #高度 mobile: #是否用于移动端 show: true #手机是否显示 会换装的板娘More info: GitHub源码地址 解压到本地博客目录的 themes/…/source 下，修改文件夹名为 live2d-widget，修改项目中的 autoload.js 文件将const live2d_path = “https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/&quot;; 改为 1const live2d_path = &quot;/live2d-widget/&quot;; 该项目需要 jQuery 和 font-awesome 支持。例如在 中加入： 在F:\\blog\\themes\\hexo-theme-antiquity\\layout\\layout.ejs下添加代码 123&lt;script src=&quot;/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;&gt; 想修改看板娘大小、位置、格式、文本内容等，可查看并修改 waifu-tips.js 、 waifu-tips.json 和 waifu.css。 More info: 参考","categories":[],"tags":[]},{"title":"hexo的简单使用","slug":"hexo-one","date":"2019-10-31T12:13:40.600Z","updated":"2019-11-03T07:17:42.101Z","comments":true,"path":"2019/10/31/hexo-one/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/10/31/hexo-one/","excerpt":"","text":"Welcome to Hexo! Check documentation . If you get any problems when using Hexo, you can find the answer in troubleshooting GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo s //hexo server简写 More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 安装插件12npm install https://... -- savenpm install https://github.com/CodeFalling/hexo-asset-image -- save //例如插入图片的要安装的插件 设置站点配置_config.yml:将post_asset_folder: false改为post_asset_folder: true 安装完成后，再运行hexo n “title” source/_posts文件夹内除了title.md文件还有一个同名的文件夹 在title.md中引入图片时，先把图片复制到title这个文件夹中，然后只需要在title.md中按照markdown的格式引入图片： ! [ 你想输入的替代文字 ] ( title/图片名.jpg ) 最后 1hexo g -d同步到github 在GitHub上下载1git clone https://github.com/yiluyanxia/hexo-theme-antiquity.git //例如下载主题 ###","categories":[],"tags":[]},{"title":"攻防世界-misc","slug":"ctf-misc","date":"2019-10-19T09:40:25.000Z","updated":"2019-12-08T12:41:45.662Z","comments":true,"path":"2019/10/19/ctf-misc/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/10/19/ctf-misc/","excerpt":"","text":"如来十三掌-菜狗为了打败菜猫，学了一套如来十三掌。与佛论禅”网站，一个编码/解码网站佛曰：……尝试使用Rot13这个明文的形式,但解密之后还是乱码 然后将得到的结果再进行base64解密，得到flag pdf-菜猫给了菜狗一张图，说图下面什么都没有 将图片拖走。。。 得到答案。。。。 功夫再高也怕菜刀 对小白的详细补充foremost是一个文件分离和还原的工具foremost的下载及使用http://q0o0p.top/2019/11/19/cft-tool/ 用foremost 分离文件，得到一个压缩包，里面有一个加密的flag.txt然后用wireshark打开文件，分组字节流查找flag.txt分组字节流搜索6666.jpg，并追踪TCP流。找到jpg文件的文件头(FFD8)和文件尾(FFD9)并复制插入到一个十六进制编辑软件中（这个是HxD Hex Editor），并保存为.jpg的格式打开该图片得到密码然后根据密码打开压缩包，得到flag。。。","categories":[],"tags":[]},{"title":"攻防世界-web-oneday","slug":"ctf-one","date":"2019-10-05T06:01:14.000Z","updated":"2019-12-08T12:41:45.693Z","comments":true,"path":"2019/10/05/ctf-one/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/10/05/ctf-one/","excerpt":"","text":"第一题 该题目可以用F12查看源代码 URL地址栏加view-source: 或 Ctrl+u（查看源码快捷键）下方有个被注释的一串字符串，找到flag将注释取消，改为：1cyberpeace&#123;d0d694dd09d7ee5ab0ae4af3d4e7373a&#125; 提交 第二题get_post: X老师告诉小宁同学HTTP通常使用两种请求方法，你知道是哪两种吗？打开以后 工具：chrome使用postman插件火狐插件hackbar（提交post请求）F12先点击Load URL然后直接在http://111.198.29.45:39706/后加 ?a=1然后在勾选Post data 在点击Execute 补充：GET传值主要在url后面加个问号然后再传参，然后post一般在火狐浏览器用hackbar传值HTTP协议中共定义了八种方法来表明对Request-URI指定的资源的不同操作方式，具体介绍如下： ·GET：向特定的资源发出请求。 ·POST：向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的创建和/或已有资源的修改。 ·OPTIONS：返回服务器针对特定资源所支持的HTTP请求方法。也可以利用向Web服务器发送’*’的请求来测试服务器的功能性。 ·HEAD：向服务器索要与GET请求相一致的响应，只不过响应体将不会被返回。这一方法可以在不必传输整个响应内容的情况下，就可以获取包含在响应消息头中的元信息。 ·PUT：向指定资源位置上传其最新内容。 ·DELETE：请求服务器删除Request-URI所标识的资源。 ·TRACE：回显服务器收到的请求，主要用于测试或诊断。 ·CONNECT：HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。 数据提交到服务器一般有两种方式，GET和POST。GET的优点:1.执行效率比POST高。2.可以通过url传递数据，查找数据的时候就会体现到它的好处。 GET的缺点:1.安全性很低，因为上传的数据都会显示在url上，所以一般用在上传无关紧要的数据上。2.上传的数据量较小，一般不能超过4K.这也是因为url的长度而被限制的。 POST优点:1.安全性高，但是也不是很高，如果想要高安全性的话就用https传输协议。2.上传的数据量比GET大得多。“理论上讲，POST是没有大小限制的，HTTP协议规范也没有进行大小限制，说“POST数据量存在 80K/100K的大小限制”是不准确的，POST数据是没有限制的，起限制作用的是服务器的处理程序的处理能力。” POST缺点:1.执行效率比GET低，但是现在的计算机都很强大，这些几乎可以忽略不计，所以建议一般都使用POST方式。2.不可以通过url传递数据，有时候可能会不方便. GET一般用于获取/查询资源信息，而POST一般用于更新资源信息。 第三题robots-X老师上课讲了Robots协议，小宁同学却上课打了瞌睡，赶紧来教教小宁Robots协议是什么吧。！ f1ag_1s_h3re.php这个页面不允许被爬取查看一下f1ag_1s_h3re.php页面得到正确答案 扫目录也可以扫到: 1python python3 dirsearch.py -u http://10.10.10.175:32793/ -e * 这里我们将下载好的dirsearch脚本解压后，打开dirsearch.py文件，运行一下，提示需要输入命令： 1-u http://10.10.10.175:32793/ -e * 在.\\reports\\111.198.29.45\\目录下找到刚输出的文件：打开即可看到扫出的目录和文件。即可看到存在robots.txt文件。HTML访问robots.txt发现f1ag_1s_h3re.php访问robots.txt发现f1ag_1s_h3re.php 相关介绍：Robots协议（也称为爬虫协议、机器人协议等）的全称是“网络爬虫排除标准”（Robots Exclusion Protocol），网站通过Robots协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取。robots协议通常以robots.txt存在，robots.txt文件是一个文本文件，robots.txt是一个协议，而不是一个命令。如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。robots.txt是搜索引擎中访问网站的时候要查看的第一个文件。robots.txt文件告诉蜘蛛程序在服务器上什么文件是可以被查看的。 User-agent: * 这里的代表的所有的搜索引擎种类，是一个通配符Disallow: /admin/ 这里定义是禁止爬寻admin目录下面的目录Disallow: /require/ 这里定义是禁止爬寻require目录下面的目录Disallow: /ABC/ 这里定义是禁止爬寻ABC目录下面的目录Disallow: /cgi-bin/.htm 禁止访问/cgi-bin/目录下的所有以”.htm”为后缀的URL(包含子目录)。Disallow: /?* 禁止访问网站中所有包含问号 (?) 的网址Disallow: /.jpg$ 禁止抓取网页所有的.jpg格式的图片Disallow:/ab/adc.html 禁止爬取ab文件夹下面的adc.html文件。Allow: /cgi-bin/ 这里定义是允许爬寻cgi-bin目录下面的目录Allow: /tmp 这里定义是允许爬寻tmp的整个目录Allow: .htm$ 仅允许访问以”.htm”为后缀的URL。Allow: .gif$ 允许抓取网页和gif格式图片Sitemap: 网站地图 告诉爬虫这个页面是网站地图 第四题backup-X老师忘记删除备份文件，他派小宁同学去把备份文件找出来,一起来帮小宁同学吧 常见的备份文件后缀名有: .git .svn .swp .~ .bak .bash_history（共6种）.bak是备份文件，为文件格式扩展名，这类文件一般在.bak前面加上应该有原来的扩展名比如windows.dll.bak，或是windows_dll.bak，有的则是由原文件的后缀名和bak混合而成 可以使用扫目录脚本或软件,扫一下,这里使用的是github上的脚本dirsearch,命令行下: py python3 dirsearch.py -u http://111.198.29.45:47591 -e *看到存在备份文件index.php.bak访问 http://10.10.10.175:32770/index.php.bak 下载到本地打开，即可看到flag 第五题cookie-X老师告诉小宁他在cookie里放了些东西，小宁疑惑地想：‘这是夹心饼干的意思吗？ 相关介绍：Cookie 在网络系统中几乎无处不在，当我们浏览以前访问过的网站时，网页中可能会出现 ：你好 XXX，这会让我们感觉很亲切，就好像吃了一个小甜品一样。这其实是通过访问主机中的一个文件来实现的，这个文件就是 Cookie。在 Internet 中，Cookie 实际上是指小量信息，是由Web服务器创建的，将信息存储在用户计算机上的文件。一般网络用户习惯用其复数形式 Cookies，指某些网站为了辨别用户身份、进行Session 跟踪而存储在用户本地终端上的数据，而这些数据通常会经过加密处理。 F12 -&gt; 存储-&gt; Cookie-&gt; look here-&gt; look here：cookie.php在URL后加上”/cookie.php”即http://111.198.29.45:47420/cookie.php 控制台-&gt; 消息头-&gt; 找到flag 第六题disabled_button-X老师今天上课讲了前端知识，然后给了大家一个不能按的按钮，小宁惊奇地发现这个按钮按不下去，到底怎么才能按下去呢？ 相关介绍:disabled，借助开发者工具可以删除这些属性，从而让其变得可用 也可以手动POST相关数据，以下为部分源代码： 123&lt;form action=\"\" method=\"post\" &gt;&lt;input disabled class=\"btn btn-default\" style=\"height:50px;width:200px;\" type=\"submit\" value=\"flag\" name=\"auth\" /&gt;&lt;/form&gt; 于是构造POST请求：auth=flagF12，将标签input中的disabled（不可用）属性删除，x掉调试框，点击按钮，即可得到flag。 第七题simple——js-小宁发现了一个网页，但却一直输不对密码。(Flag格式为 Cyberpeace{xxxxxxxxx} ) F12，找index文件，阅读js代码。（或者ctrl+u :view-source命令） 会发现dechiffre返回值与参数pass_enc没有任何关联，返回值是固定的，即不论输入什么都是一样得输出。所以猜测密码在string这一行里。利用python/java代码来求出flag：先将16进制数输出，再将数字（ascii码）转换为对应的字符。 第八题xff_referer-X老师告诉小宁其实xff和referer是可以伪造的。 相关介绍：X-Forwarded-For:简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP 代理或者负载均衡服务器时才会添加该项。HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的，服务器基此可以获得一些信息用于处理。 xff 是http的拓展头部，作用是使Web服务器获取访问用户的IP真实地址（可伪造）。由于很多用户通过代理服务器进行访问，服务器只能获取代理服务器的IP地址，而xff的作用在于记录用户的真实IP，以及代理服务器的IP。 格式为：X-Forwarded-For: 本机IP, 代理1IP, 代理2IP, 代理2IP 在Proxy的History里找到目标网页，右键选择发送到repeater。在repeater里查看目标地址内容，添加：X-Forwarded-For:123.123.123.123（这一步是伪造XFF———&gt;go–&gt;收到提示）。或者直接在Proxy的’Intercept is on’里面加上： X-Forwarded-For:123.123.123.123。 Referer:https://www.google.com（这一步是伪造Referer） 也可以直接在Host: 111.198.29.45:40025下面写入：X-Forwarded-For:123.123.123.123Referer:https://www.google.com 第九题weak_auth-小宁写了一个登陆验证页面，随手就设了一个密码。 相关介绍：Intruder是一个定制的高度可配置工具，可以对Web应用程序进行自动化攻击。原理：Intruder在原始请求数据的基础上，通过修改各种请求参数获取不同的请求应答。在每一次请求中，Intruder通常会携带一个或多个有效攻击载荷（Payload），在不同的位置进行攻击重放，通过应答数据的比对分析获得需要的特征数据。 github上密码字典：https://github.com/rootphantomer/Blasting_dictionary F12可以看到：找到Positions，清楚标记Clear，指针指向password=后面，添加标记Add，如下图所示，将密码放在两个 $pass$ 之间。找到Payloads，加载Load Payload Options，将下载好的字典添加进去。选择左上角startAttack开始爆破。 登陆以后可以看到:cyberpeace{e255ee279841e7f1eb8f44a420e01870} 第十题webshel-小宁百度了php一句话,觉着很有意思,并且把它放在index.php里。 看到一句话木马，而且题目描述提示一句话木马放在index.php中。蚂剑（https://github.com/AntSwordProject/antSword/releases） 用菜刀连接:http://111.198.29.45:58974/index.php 参考：https://www.cnblogs.com/kubbycatty/archive/2019/06/27/11100171.html https://blog.csdn.net/qq_43081170/article/details/94717446","categories":[],"tags":[]},{"title":"CTF","slug":"ctftools","date":"2019-10-02T06:01:14.000Z","updated":"2019-11-04T10:57:00.452Z","comments":true,"path":"2019/10/02/ctftools/","link":"","permalink":"https://github.com/q0o0p-wow/q0o0p-wow.github.io/2019/10/02/ctftools/","excerpt":"","text":"CTFtoolstools链接 比较全面的教程：[https://github.com/CHYbeta/Web-Security-Learning] (https://github.com/CHYbeta/Web-Security-Learning) 常用【在线类工具】Objectif SÃ©curitÃ© 在线LMHASH破解https://www.hashkiller.co.uk/ hash破解https://github.com/ 全球知名在线管理开发平台http://astalavista.box.sk 最好的注册码、注册机、序列号搜索引擎http://www.s0ftpj.org/ 意大利老站http://recover-weblogic-password.appspot.com/ 在线weblogic密文破解http://tools88.com/safe/vnc.php 在线VNC密文破http://www.vpnhunter.com/ 在线查找VPN，mail接口http://mailinator.com 一次性邮箱http://www.yopmail.com/zh/ 一次性邮箱 练习平台https://adworld.xctf.org.cn/task 攻防世界练习 https://www.anquanke.com/vul 推荐一些【综合类型网站】 http://www.blackhat.com/ http://shiyanbar.com（线上资源均免费，经常性的举办各种有奖活动）http://packetstormsecurity.com (有大量exploit程序)http://www.ussrback.com/ 比较活跃的安全站http://www.attrition.org/ 内容全面的安全站 (更新至2013年)http://www.social-engineer.org/ 社会工程学研究所https://www.soldierx.comhttp://www.windowsecurity.com/(windowsnetworking.com)包含论坛、博客、新闻、工具windowsnetworking.comhttp://www.blackmoreops.comhttp://www.securitytube.net 大量视频 挖洞人员【漏洞平台】Offensive Security Exploit Database Archive www.sebug.org 补天 - 企业和白帽子共赢的漏洞响应平台，帮助企业建立SRC，库带计划 SOBUG漏洞悬赏平台Exploit-IDCVE -SecuriTeam.comComputer Security vulnerabilities and exploits databaseSecurityFocushttp://marc.info/?l=bugtraqSecurityTracker.com 国内外安全大牛的【个人博客】http://www.insecure.org (Fyoderr的个人站点,即Nmap的老家) http://www.guninski.com/ 安全专家Guninski的主页，有大量系统漏洞工具具及源代码 http://blog.gentilkiwi.com/ mimikatzhttps://www.schneier.com/ Bruce,Schneier的博客（专业Blackhat会棍）http://an7isec.blogspot.co.il/ “整蛊小黑必备” 博客 发现了WVS8版本远程溢出漏洞https://fail0verflow.com/blog/index.html 一个硬件牛的BLOGhttps://blog.0x80.org/ 破解过jeep车锁的大牛https://www.netspi.com/blog 对MSSQL渗透有研究的大牛http://hakin9.orghttp://websec.ca/blog 渗透tipshttp://www.derkeiler.com/http://www.xssed.com/http://adsecurity.org/ 内网渗透、域渗透牛人http://securityxploded.comhttp://www.devttys0.com/blog/ 国外路由器安全大牛","categories":[],"tags":[]}]}